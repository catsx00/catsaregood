#include <stdio.h>
#include <math.h>

float f(float x);
float trap(float a, float h, int n);

int main(){
    float a,b,h,eps = 0.00001, error=1, I[10][10];
    int n=1, j=0, k, l, maxrow;

    printf("enter the lower & upper limits: ");
    scanf("%f%f",&a,&b);

    printf("enter the maximum number of row to be computed: ");
    scanf("%d",&maxrow);

    h=b-a;
    I[0][0] = h/2*(f(a) + f(b));

    while((error>eps) && (j<maxrow)){
        j++;
        h/=2;
        n*=2;
        I[j][0] = trap(a,h,n);

        for(k=1; k<=j; k++){
            I[j][k] = I[j][k-1] + ( I[j][k-1] - I[j-1][k-1] )/ (pow(4,k)-1);
        }

        for(l=0; l<=j; l++){
            printf("\t %f\t",I[j][l]);
        }
        printf("\n");
        error = fabs(I[j-1][j-1] - I[j][j]);
    }

    if(error<eps){
        printf("\nThe value of the integration is %f",I[j][j]);
    }else{
        printf("The result does not achieve the desired accuracy"); 
        printf("\nthe best approximation is %f ", I[j][j]);
    }
}

float f(float x){
    return(x*exp(x));
}

float trap(float a, float h, int n){
    float sum=0;
    for(int i=1; i<n; i++){
        sum += f(a+ i*h);
    }
    sum = h/2*(f(a)+f(a+n*h) + 2*sum );
    return (sum);
}





// ******OUTPUT******
// Enter the limits a and b: 0  1
// Enter max. number of rows to be computed: 4
// Romberg integration table
// 1.091751	  1.002621
// 1.023064 	1.000169 	1.000005
// 1.005774 	1.000011 	1.000000 	1.000000

// The value of the integration is 1.000000
